















































































































































































}  )    </div>      </main>        </section>          </div>            </div>              </form>                </button>                  Submit Review                >                  className="w-full bg-red-600 hover:bg-red-700 text-white font-bold py-3 px-4 rounded transition duration-300 transform hover:scale-105 active:scale-95"                  type="submit"                <button                </div>                  ></textarea>                    required                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-600"                    rows={4}                    onChange={handleChange}                    value={newReview.comment}                    name="comment"                    id="comment"                  <textarea                  </label>                    Comment                  <label htmlFor="comment" className="block text-gray-700 font-bold mb-2">                <div className="mb-4">                </div>                  />                    required                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-600"                    onChange={handleChange}                    value={newReview.rating}                    max="5"                    min="1"                    name="rating"                    id="rating"                    type="number"                  <input                  </label>                    Rating                  <label htmlFor="rating" className="block text-gray-700 font-bold mb-2">                <div className="mb-4">                </div>                  />                    required                    className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-600"                    onChange={handleChange}                    value={newReview.name}                    name="name"                    id="name"                    type="text"                  <input                  </label>                    Name                  <label htmlFor="name" className="block text-gray-700 font-bold mb-2">                <div className="mb-4">              <form onSubmit={handleSubmit}>              <h2 className="text-3xl font-bold mb-8 text-center">Write a Review</h2>            <div className="bg-white p-8 rounded-lg shadow-lg">            </div>              ))}                </div>                  <p className="text-gray-600">{review.comment}</p>                  </div>                    </div>                      </div>                        ))}                          />                            className={`w-4 h-4 ${i < review.rating ? "text-yellow-400" : "text-gray-300"}`}                            key={i}                          <Star                        {[...Array(5)].map((_, i) => (                      <div className="flex">                      <h3 className="font-bold">{review.name}</h3>                    <div>                    </div>                      />                        className="rounded-full"                        objectFit="cover"                        layout="fill"                        alt={review.name}                        src={review.image || "/placeholder.svg"}                      <Image                    <div className="relative w-12 h-12 mr-4">                  <div className="flex items-center mb-4">                <div key={index} className="bg-white p-6 rounded-lg shadow-lg">              {reviews.map((review, index) => (            <div className="grid grid-cols-1 md:grid-cols-2 gap-8 mb-16">            </div>              <p className="text-2xl font-bold">{averageRating.toFixed(1)} out of 5</p>              </div>                ))}                  />                    className={`w-8 h-8 ${i < Math.round(averageRating) ? "text-yellow-400" : "text-gray-300"}`}                    key={i}                  <Star                {[...Array(5)].map((_, i) => (              <div className="flex items-center justify-center mb-4">              <h2 className="text-3xl font-bold mb-4">Average Rating</h2>            <div className="bg-gray-100 p-8 rounded-lg shadow-lg mb-8 text-center">          <div className="max-w-4xl mx-auto">        <section className="container mx-auto px-4 py-16">        </section>          </div>            <h1 className="text-4xl md:text-6xl font-bold text-white">Customer Reviews</h1>          <div className="absolute inset-0 flex items-center justify-center">          />            priority            className="brightness-50"            objectFit="cover"            layout="fill"            alt="Customer reviews banner"            src="https://images.unsplash.com/photo-1414235077428-338989a2e8c0?auto=format&fit=crop&w=1470&q=80"          <Image        <section className="relative h-64 md:h-96">      <main className="pt-16">      <Header />    <div className="min-h-screen bg-white">  return (  const averageRating = reviews.reduce((acc, review) => acc + review.rating, 0) / reviews.length  }    alert("Thank you for your review!")    setNewReview({ name: "", rating: 5, comment: "" })    // Reset form after submission    console.log(newReview)    // Handle form submission logic here    e.preventDefault()  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {  }    setNewReview((prevState) => ({ ...prevState, [name]: value }))    const { name, value } = e.target  const handleChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {  })    comment: "",    rating: 5,    name: "",  const [newReview, setNewReview] = useState({export default function Reviews() {]  },    image: "https://images.unsplash.com/photo-1484723091739-30a097e8f929?auto=format&fit=crop&w=150&h=150&q=80",    comment: "Great atmosphere and friendly staff. Will definitely come back!",    rating: 5,    name: "Mike Johnson",  {  },    image: "https://images.unsplash.com/photo-1568901346375-23c9450c58cd?auto=format&fit=crop&w=150&h=150&q=80",    comment: "Love the maple syrup burger. Such a unique taste!",    rating: 4,    name: "Jane Smith",  {  },    image: "https://images.unsplash.com/photo-1586805608485-add336722759?auto=format&fit=crop&w=150&h=150&q=80",    comment: "The best poutine I've ever had! Authentic Canadian flavors.",    rating: 5,    name: "John Doe",  {const reviews = [import { Star } from "lucide-react"import Header from "../components/Header"import Image from "next/image"import { useState } from "react"import type React from "react""use client"